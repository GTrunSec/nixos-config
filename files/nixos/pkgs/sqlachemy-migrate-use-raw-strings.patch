From 925c58137da563b64aa1d784f2dc5d0b25a18df1 Mon Sep 17 00:00:00 2001
From: Ben Wolsieffer <benwolsieffer@gmail.com>
Date: Sat, 16 Dec 2017 14:10:24 -0500
Subject: [PATCH] Use raw strings.

---
 migrate/changeset/__init__.py         | 2 +-
 migrate/changeset/databases/sqlite.py | 4 ++--
 migrate/changeset/schema.py           | 2 +-
 migrate/versioning/script/sql.py      | 2 +-
 4 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/migrate/changeset/__init__.py b/migrate/changeset/__init__.py
index 507fa73..3518716 100644
--- a/migrate/changeset/__init__.py
+++ b/migrate/changeset/__init__.py
@@ -9,7 +9,7 @@ import re
 import sqlalchemy
 from sqlalchemy import __version__ as _sa_version
 
-_sa_version = tuple(int(re.match("\d+", x).group(0)) for x in _sa_version.split("."))
+_sa_version = tuple(int(re.match(r"\d+", x).group(0)) for x in _sa_version.split("."))
 SQLA_07 = _sa_version >= (0, 7)
 SQLA_08 = _sa_version >= (0, 8)
 SQLA_09 = _sa_version >= (0, 9)
diff --git a/migrate/changeset/databases/sqlite.py b/migrate/changeset/databases/sqlite.py
index 92d42f2..3256693 100644
--- a/migrate/changeset/databases/sqlite.py
+++ b/migrate/changeset/databases/sqlite.py
@@ -61,7 +61,7 @@ class SQLiteHelper(SQLiteCommon):
             table_name=table.name
         ).fetchone()[0]
 
-        UNIQUE_PATTERN = "CONSTRAINT (\w+) UNIQUE \(([^\)]+)\)"
+        UNIQUE_PATTERN = r"CONSTRAINT (\w+) UNIQUE \(([^\)]+)\)"
         constraints = []
         for name, cols in re.findall(UNIQUE_PATTERN, data):
             # Filter out any columns that were dropped from the table.
@@ -69,7 +69,7 @@ class SQLiteHelper(SQLiteCommon):
             if columns:
                 constraints.extend(UniqueConstraint(*columns, name=name))
 
-        FKEY_PATTERN = "CONSTRAINT (\w+) FOREIGN KEY \(([^\)]+)\)"
+        FKEY_PATTERN = r"CONSTRAINT (\w+) FOREIGN KEY \(([^\)]+)\)"
         for name, cols in re.findall(FKEY_PATTERN, data):
             # Filter out any columns that were dropped from the table.
             columns = self._filter_columns(cols, table)
diff --git a/migrate/changeset/schema.py b/migrate/changeset/schema.py
index 931ef7b..ec707be 100644
--- a/migrate/changeset/schema.py
+++ b/migrate/changeset/schema.py
@@ -200,7 +200,7 @@ class MyMeta(sqlalchemy.sql.visitors.VisitableType, abc.ABCMeta, object):
 
 
 class ColumnDelta(six.with_metaclass(MyMeta, DictMixin, sqlalchemy.schema.SchemaItem)):
-    """Extracts the differences between two columns/column-parameters
+    r"""Extracts the differences between two columns/column-parameters
 
         May receive parameters arranged in several different ways:
 
diff --git a/migrate/versioning/script/sql.py b/migrate/versioning/script/sql.py
index 862bc9f..0949cac 100644
--- a/migrate/versioning/script/sql.py
+++ b/migrate/versioning/script/sql.py
@@ -47,7 +47,7 @@ class SqlScript(base.BaseScript):
                 # (and committing transaction, which is contradictory to
                 # the whole idea of ROLLBACK)
                 ignored_statements = ('BEGIN', 'END', 'COMMIT')
-                ignored_regex = re.compile('^\s*(%s).*;?$' % '|'.join(ignored_statements),
+                ignored_regex = re.compile(r'^\s*(%s).*;?$' % r'|'.join(ignored_statements),
                                            re.IGNORECASE)
 
                 # NOTE(ihrachys): script may contain multiple statements, and
-- 
2.15.0

